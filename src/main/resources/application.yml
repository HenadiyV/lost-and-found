
facebook:
  client:
    clientId: 1
    clientSecret: ${facebookSecret}

    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me?fields=id,name,email,gender,photos
google:
    client:
        accessTokenUri: https://www.googleapis.com/oauth2/v4/token
        clientAuthenticationScheme: form
        clientId: 1.apps.googleusercontent.com
        clientSecret: ${googlSecret}
        scope: openid,email,profile
        userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
    resource:
        preferTokenInfo: true
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

spring:
    datasource:
        password: 1111
        url: jdbc:mysql://localhost:3306/a_demo?serverTimezone=UTC
        username: root
    jpa:
        generate-ddl: true
        properties:
            hibernate:
                jdbc:
                    lob:
                        non_contextual_creation: true
    session:
        jdbc:
            initialize-schema: always
            schema: classpath:session_tables.sql
            table-name: SPRING_SESSION



upload:
    path: g:/Java/1_1_Kursovoy/lost-and-found/src/uploads/

animals:
    path: g:/Java/1_1_Kursovoy/lost-and-found/src/uploads/animals